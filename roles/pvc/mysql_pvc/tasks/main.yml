# Deploy mysql with pvc
- name: Deploy mysql with pvc from yml
  k8s:
    state : present
    definition: "{{ lookup('file', 'mysql-persistent-template.yml')}}"

- name: Wait for mysql with pvc deployment
  debug:
    var: pod
  until: pod and pod.status.phase == "Running"
  retries: 10
  delay: 15
  vars:
    pod: '{{ lookup("k8s",
      kind="Pod",
      namespace="mysql-persistent",
      label_selector="deployment=mysql-1"
    )}}'

- name: Check if volume is bound
  debug:
    var: volume
  until: volume and volume.status.phase == "Bound"
  retries: 10
  delay: 15
  vars:
    volume: '{{ lookup("k8s",
      kind="PersistentVolumeClaim",
      namespace="mysql-persistent",
      label_selector="app=mysql"
    )}}'

# Create a backup
- name: Create ark backup of mysql
  k8s:
    state : present
    definition: "{{ lookup('file', 'create-backup-mysql-persistent.yml')}}"

- name: Wait for backup to complete
  debug:
    var: backup
  until: backup and backup.status.get("phase", 0) == "Completed"
  retries: 10
  delay: 5
  vars:
    backup: '{{ lookup("k8s",
      kind="Backup",
      api_version="ark.heptio.com/v1",
      namespace="heptio-ark",
      resource_name="mysql-persistent-backup"
    )}}'

# Simulate DR and restore
- name: Delete mysql
  k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: mysql-persistent

- name: Wait for namespace to be deleted
  debug:
    var: ns
  until:  not ns
  retries: 10
  delay: 5
  vars:
    ns: '{{ lookup("k8s",
      kind="Namespace",
      api_version="v1",
      resource_name="mysql-persistent"
    )}}'

- name: Create ark restore of mysql
  k8s:
    state: present
    definition: "{{ lookup('file', 'create-restore-mysql-persistent.yml')}}"

- name: Wait for restore to finish
  debug:
    var: restore
  until: restore and restore.status.get("phase", 0) == "Completed"
  retries: 20
  delay: 10
  ignore_errors: yes
  vars:
    restore: '{{ lookup("k8s",
      kind="Restore",
      api_version="ark.heptio.com/v1",
      namespace="heptio-ark",
      resource_name="mysql-persistent-restore"
    )}}'

- name: Wait for mysql with pvc deployment
  debug:
    var: pod
  until: pod and pod.status.phase == "Running"
  retries: 10
  delay: 15
  vars:
    pod: '{{ lookup("k8s",
      kind="Pod",
      namespace="mysql-persistent",
      label_selector="deployment=mysql-1"
    )}}'

- name: Check if volume is restored and bound
  debug:
    var: volume
  until: volume and volume.status.phase == "Bound"
  retries: 10
  delay: 15
  vars:
    volume: '{{ lookup("k8s",
      kind="PersistentVolumeClaim",
      namespace="mysql-persistent",
      label_selector="app=mysql"
    )}}'


- name: Delete ark restore of mysql (workaround to use common name for restore)
  k8s:
    state: absent
    definition: "{{ lookup('file', 'create-restore-mysql-persistent.yml')}}"
